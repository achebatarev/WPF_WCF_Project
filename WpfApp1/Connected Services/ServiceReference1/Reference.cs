//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class Customer : object
    {
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Service")]
    public interface Service
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/InsertCustomer", ReplyAction="http://tempuri.org/Service/InsertCustomerResponse")]
        int InsertCustomer(ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/InsertCustomer", ReplyAction="http://tempuri.org/Service/InsertCustomerResponse")]
        System.Threading.Tasks.Task<int> InsertCustomerAsync(ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/UpdateCustomerPhone", ReplyAction="http://tempuri.org/Service/UpdateCustomerPhoneResponse")]
        int UpdateCustomerPhone(ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/UpdateCustomerPhone", ReplyAction="http://tempuri.org/Service/UpdateCustomerPhoneResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerPhoneAsync(ServiceReference1.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/GetAllCustomers", ReplyAction="http://tempuri.org/Service/GetAllCustomersResponse")]
        ServiceReference1.Customer[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/GetAllCustomers", ReplyAction="http://tempuri.org/Service/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Customer[]> GetAllCustomersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface ServiceChannel : ServiceReference1.Service, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ServiceReference1.Service>, ServiceReference1.Service
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceClient() : 
                base(ServiceClient.GetDefaultBinding(), ServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_Service.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), ServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int InsertCustomer(ServiceReference1.Customer c)
        {
            return base.Channel.InsertCustomer(c);
        }
        
        public System.Threading.Tasks.Task<int> InsertCustomerAsync(ServiceReference1.Customer c)
        {
            return base.Channel.InsertCustomerAsync(c);
        }
        
        public int UpdateCustomerPhone(ServiceReference1.Customer c)
        {
            return base.Channel.UpdateCustomerPhone(c);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerPhoneAsync(ServiceReference1.Customer c)
        {
            return base.Channel.UpdateCustomerPhoneAsync(c);
        }
        
        public ServiceReference1.Customer[] GetAllCustomers()
        {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Customer[]> GetAllCustomersAsync()
        {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_Service))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_Service))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:50320/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_Service);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_Service);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_Service,
        }
    }
}
